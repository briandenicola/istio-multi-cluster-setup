name: Multi-primary Istio Service Mesh
on:
  workflow_dispatch:
    inputs:
      central_cluster_name:
        description: 'The name of the Central Cluster to create - e616cus'
        required: true
        default: 'e616aq'
      southcentral_cluster_name:
        description: 'The name of the South Central Cluster to create - e616scus'
        required: true
        default: 'e616aq'
      
jobs:
  deploy-southcentral:
    name: Deploys South Central Cluster
    runs-on: self-hosted
    env:
      ARM_USE_MSI: true 
      ARM_SUBSCRIPTION_ID: ${{ secrets.SOUTHCENTRAL_SUBSCRIPTION_ID }}
      CORE_SUBSCRIPTION_ID: ${{ secrets.CORE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      CLUSTER_RG:  DevSub02_K8S_${{ github.event.inputs.southcentral_cluster_name }}_RG
      CLUSTER_NAME: ${{ github.event.inputs.southcentral_cluster_name }}

    defaults:
      run:
        working-directory: './infrastructure'

    steps:
    - name: "Checkout"
      uses: actions/checkout@master

    - name: Login to Azure
      run: |
        az login --identity 

    - name: "Terraform Setup"
      uses: hashicorp/setup-terraform@v1

    - name: "Terraform Init"
      id: init
      run: terraform init -backend=true -backend-config="tenant_id=${{ env.ARM_TENANT_ID }}" -backend-config="subscription_id=${{ env.CORE_SUBSCRIPTION_ID }}" -backend-config="key=${{ env.CLUSTER_NAME }}.terraform.tfstate"
      
    - name: "Terraform Plan"
      id: plan
      run:  terraform plan -out="${{ env.CLUSTER_NAME }}.plan" -var "cluster_name=${{ env.CLUSTER_NAME }}" -var "resource_group_name=${{ env.CLUSTER_RG }}" -var "certificate_base64_encoded=${{ secrets.CERTIFICATE }}"  -var "certificate_password=${{ secrets.CERT_PASSWORD }}" -var-file="istio-southcentral.tfvars"
      continue-on-error: false 

    - name: "Terraform Apply"
      id: apply
      run: terraform apply -auto-approve ${{ env.CLUSTER_NAME }}.plan

  deploy-central:
    name: Deploys Central Cluster
    runs-on: self-hosted
    needs: [deploy-southcentral]
    env:
      ARM_USE_MSI: true 
      ARM_SUBSCRIPTION_ID: ${{ secrets.CENTRAL_SUBSCRIPTION_ID }}
      CORE_SUBSCRIPTION_ID: ${{ secrets.CORE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      CLUSTER_RG:  DevSub02_K8S_${{ github.event.inputs.central_cluster_name }}_RG
      CLUSTER_NAME: ${{ github.event.inputs.central_cluster_name }}

    defaults:
      run:
        working-directory: './infrastructure'

    steps:
    - name: "Checkout"
      uses: actions/checkout@master

    - name: Login to Azure
      run: |
        az login --identity 

    - name: "Terraform Setup"
      uses: hashicorp/setup-terraform@v1

    - name: "Terraform Init"
      id: init
      run: terraform init -backend=true -backend-config="tenant_id=${{ env.ARM_TENANT_ID }}" -backend-config="subscription_id=${{ env.CORE_SUBSCRIPTION_ID }}" -backend-config="key=${{ env.CLUSTER_NAME }}.terraform.tfstate"
      
    - name: "Terraform Plan"
      id: plan
      run:  terraform plan -out="${{ env.CLUSTER_NAME }}.plan" -var "cluster_name=${{ env.CLUSTER_NAME }}" -var "resource_group_name=${{ env.CLUSTER_RG }}" -var "certificate_base64_encoded=${{ secrets.CERTIFICATE }}"  -var "certificate_password=${{ secrets.CERT_PASSWORD }}" -var-file="istio-central.tfvars"
      continue-on-error: false 

    - name: "Terraform Apply"
      id: apply
      run: terraform apply -auto-approve ${{ env.CLUSTER_NAME }}.plan

  post-setup-configuration:
    name: Configure Istio
    runs-on: self-hosted
    needs: [deploy-southcentral,deploy-central]
    env:
      ARM_USE_MSI: true 
      SC_CLUSTER_RG:  DevSub02_K8S_${{ github.event.inputs.southcentral_cluster_name }}_RG
      SC_CLUSTER_NAME: ${{ github.event.inputs.southcentral_cluster_name }}
      CE_CLUSTER_RG:  DevSub02_K8S_${{ github.event.inputs.central_cluster_name }}_RG
      CE_CLUSTER_NAME: ${{ github.event.inputs.central_cluster_name }}
      GITHUB_ACCOUNT: briandenicola
      GITHUB_REPO: istio-multi-primary-setup
      REPO_BRANCH: master

    steps:
    - name: Setup South Central Pod Identity - Service Mesh
      working-directory: './scripts'
      run: |
        export SUBSCRIPTION_ID=${{ secrets.SOUTHCENTRAL_SUBSCRIPTION_ID }}
        export CLUSTER_NAME=${{ env.SC_CLUSTER_NAME }}
        export CLUSTER_RG=${{ env.SC_CLUSTER_RG }}
        export IDENTITY_NAME=${{ env.SC_CLUSTER_NAME }}-istio-pod-identity
        export IDENTITY_RG=${{ env.SC_CLUSTER_RG }}
        export NAMESPACE="default"
        
        bash ./aks-pod-identity-creation.sh

    - name: Setup Central Pod Identity - Service Mesh
      working-directory: './scripts'
      run: |
        export SUBSCRIPTION_ID=${{ secrets.CENTRAL_SUBSCRIPTION_ID }}
        export CLUSTER_NAME=${{ env.CE_CLUSTER_NAME }}
        export CLUSTER_RG=${{ env.CE_CLUSTER_RG }}
        export IDENTITY_NAME=${{ env.CE_CLUSTER_NAME }}-istio-pod-identity
        export IDENTITY_RG=${{ env.CE_CLUSTER_RG }}
        export NAMESPACE="default"
        
        bash ./aks-pod-identity-creation.sh

    - name: Setup Istio Trusted CA Store
      working-directory: './scripts'
      run: |
        export CENTRAL_SUBSCRIPTION_ID=${{ secrets.CENTRAL_SUBSCRIPTION_ID }}
        export SOUTHCENTRAL_SUBSCRIPTION_ID=${{ secrets.SOUTHCENTRAL_SUBSCRIPTION_ID }}
        bash ./istio-create-trusted-ca.sh

    - name: Setup Flux - South Central
      working-directory: './scripts'
      run: |
        export SUBSCRIPTION_ID=${{ secrets.SOUTHCENTRAL_SUBSCRIPTION_ID }}
        export CLUSTER_NAME=${{ env.SC_CLUSTER_NAME }}
        export CLUSTER_RG=${{ env.SC_CLUSTER_RG }}
        export CLUSTER_BOOTSTRAP_PATH=./cluster-manifests/istio-southcentral
        bash ./aks-flux-configuration.sh

    - name: Setup Flux - Central
      working-directory: './scripts'
      run: |
        export SUBSCRIPTION_ID=${{ secrets.CENTRAL_SUBSCRIPTION_ID }}
        export CLUSTER_NAME=${{ env.CE_CLUSTER_NAME }}
        export CLUSTER_RG=${{ env.CE_CLUSTER_RG }}
        export CLUSTER_BOOTSTRAP_PATH=./cluster-manifests/istio-central
        bash ./aks-flux-configuration.sh

    - name: Setup Flux - Central
      working-directory: './scripts'
      run: |
        export CENTRAL_SUBSCRIPTION_ID=${{ secrets.CENTRAL_SUBSCRIPTION_ID }}
        export SOUTHCENTRAL_SUBSCRIPTION_ID=${{ secrets.SOUTHCENTRAL_SUBSCRIPTION_ID }}
        bash ./istio-create-remote-secrets.sh